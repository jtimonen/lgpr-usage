library(rstan)
pkgbuild::has_build_tools(debug = TRUE)
install.packages('pkgbuild')
install.packages('ggplot2')
Sys.which("make")
install.packages("jsonlite", type = "source")
file.rename(from = "~/.R/Makevars.win", to = "~/.R/Makevars_old")
file.remove("~/.R/Makevars")
cat("CXX14FLAGS += -mtune=native -march=native -Wno-ignored-attributes -Wno-deprecated-declarations", file = "~/.R/Makevars.win")
pkgbuild::has_build_tools(debug = TRUE)
install.packages("rstan", dependencies = TRUE)
library(devtools)
install.packages(devtools)
install.packages('devtools')
library('rstan')
devtools::install_github('jtimonen/lgpr')
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
install.packages("rstan")
install.packages("rstan")
source('~/stan_test.R')
devtools::install.packages('jtimonen/lgpr')
devtools::install_github('jtimonen/lgpr')
install.packages("
https://win-builder.r-project.org/C9WXoVuGjU07/StanHeaders_2.21.0-4.zip",
repos = NULL, type = "win.binary")
install.packages("https://win-builder.r-project.org/C9WXoVuGjU07/StanHeaders_2.21.0-4.zip", repos = NULL, type = "win.binary")
devtools::install_github('jtimonen/lgpr')
remove.packages('StanHeaders')
install.packages("https://win-builder.r-project.org/C9WXoVuGjU07/StanHeaders_2.21.0-4.zip", repos = NULL, type = "win.binary")
install.packages("https://win-builder.r-project.org/C9WXoVuGjU07/StanHeaders_2.21.0-4.zip", repos = NULL, type = "win.binary")
install.packages("
https://win-builder.r-project.org/C9WXoVuGjU07/StanHeaders_2.21.0-4.zip",
repos = NULL, type = "win.binary")
install.packages("https://win-builder.r-project.org/C9WXoVuGjU07/StanHeaders_2.21.0-4.zip", repos = NULL, type = "win.binary")
library(StanHeaders)
devtools::install_github('jtimonen/lgpr')
ls
install.packages("https://win-builder.r-project.org/vzXCgbra5N93/rstantools_2.1.1.zip", repos = NULL, type = "win.binary")
library(rstantools)
library(StanHeaders)
devtools::install_github('jtimonen/lgpr')
library(rstan)
install.packages('rstan', dependencies=TRUE)
install.packages('rstan', dependencies=TRUE)
library(rstan)
install.packages('tidyverse')
library(rstan)
library(devtools)
install.packages('devtools')
library(devtools)
install_github('jtimonen/lgpr')
pkgbuild::has_build_tools(debug = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, ifelse(.Platform$OS.type == "windows", "Makevars.win", "Makevars"))
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS=-O3 -march=native -mtune=native",
if( grepl("^darwin", R.version$os)) "CXX14FLAGS += -arch x86_64 -ftemplate-depth-256" else
if (.Platform$OS.type == "windows") "CXX11FLAGS=-O3 -march=corei7 -mtune=corei7" else
"CXX14FLAGS += -fPIC",
file = M, sep = "\n", append = TRUE)
devtools::install_github('jtimonen/lgpr')
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
pkgbuild::has_build_tools(debug = TRUE)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars.win")
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS=-O3 -march=corei7 -mtune=corei7",
"CXX14 = $(BINPREF)g++ -m$(WIN) -std=c++1y",
"CXX11FLAGS=-O3 -march=corei7 -mtune=corei7",
file = M, sep = "\n", append = TRUE)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
Sys.setenv(MAKEFLAGS = "-j4") # four cores used
install.packages("rstan", type = "source")
source('~/stan_test.R')
library(lgpr)
devtools::install_github('jtimonen/lgpr')
devtools::install_github('jtimonen/lgpr')
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR)) dir.create(dotR)
M <- file.path(dotR, "Makevars.win")
if (!file.exists(M)) file.create(M)
cat("\nCXX14FLAGS=-O3 -march=corei7 -mtune=corei7",
"CXX14 = $(BINPREF)g++ -m$(WIN) -std=c++1y",
"CXX11FLAGS=-O3 -march=corei7 -mtune=corei7",
file = M, sep = "\n", append = TRUE)
pkgbuild::has_build_tools(debug = TRUE)
devtools::install_github('jtimonen/lgpr')
install.packages('bookdown')
install.packages('tufte')
library(lgpr)
library(rstan)
?sampling
?stanfit
library(rstanarm)
??pp_check
?rstanarm
?sbc
?require
library(lgpr)
devtools::install_github('jtimonen/lgpr', ref ='development')
devtools::install_github('jtimonen/lgpr', ref ='development')
install.packages('vctrs')
install.packages("vctrs")
devtools::install_github('jtimonen/lgpr', ref ='development')
install.packages('glue')
install.packages("glue")
devtools::install_github('jtimonen/lgpr', ref ='development')
install.packages("backports")
install.packages("backports")
devtools::install_github('jtimonen/lgpr', ref ='development')
install.packages("processz")
install.packages("processx")
install.packages("processx")
devtools::install_github('jtimonen/lgpr', ref ='development')
library(lgpr)
?lgpr
?relevances
?p_explained
testdata_001
a <- testdata_001
lgp(y ~ gp(age) + gp(age)*zerosum(id), a)
f <- lgp(y ~ gp(age) + gp(age)*zerosum(id), a)
f
relevances(fit)
relevances(f)
plot_fit(fit)
plot_fit(f)
plot(f)
plot_draws(fit)
plot_draws(f)
lgpr::plot(f)
?checks
library(rstan)
source('~/stan_square.R')
model_code
cat(model_code)
source('~/stan_square.R')
?stan_model
out <- rstan::stan_model(model_code = model_code)
?rstan
library(rstan)
install.packages("rstan")
install.packages("rstan")
library(devtools)
install_github('jtimonen/lgpr')
install.packages("backports")
install.packages("backports")
install_github('jtimonen/lgpr')
devtools::install_github('jtimonen/lgpr')
library(lgpr)
?lgpr
install.packages('cmdstanr')
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
?set_cmdstan_path
?cmdstanr::set_cmdstan_path
library(devtools)
install_github('jtimonen/lgpr')
install.packages('pc')
install.packages('ps')
install.packages("ps")
install.packages('callr')
install_github('jtimonen/lgpr')
install_github('jtimonen/lgpr')
devtools::install_github('jtimonen/lgpr')
install.packages('rland')
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
devtools::install_github('jtimonen/lgpr')
library(lgpr)
?lgp
library(devtools)
install_github('jtimonen/lgpr')
install.packages('digest')
install.packages("digest")
install.packages('digest')
install_github('jtimonen/lgpr')
devtools::install_github('jtimonen/lgpr')
library(lgpr)
testdata_002_new <- testdata_002 %>%
dplyr::rename(time=age, depvar=y)
fit <- lgp(depvar ~ gp(time) + zs(id)*gp(time) + zs(sex)*gp(time) + gp_vm(diseaseAge) + zs(group),
data     = testdata_002_new,
prior    = list(wrp = log_normal(-0.7, 0.3)),
iter     = 200,
chains   = 2,
cores = 2,
refresh  = 50)
t <- seq(1, 120, by = 1)
x_pred <- new_x(testdata_002_new, t, x = "time", x_ns = "diseaseAge")
p <- pred(fit, x_pred, reduce = mean)
library(dplyr)
testdata_002_new <- testdata_002 %>%
dplyr::rename(time=age, depvar=y)
fit <- lgp(depvar ~ gp(time) + zs(id)*gp(time) + zs(sex)*gp(time) + gp_vm(diseaseAge) + zs(group),
data     = testdata_002_new,
prior    = list(wrp = log_normal(-0.7, 0.3)),
iter     = 200,
chains   = 2,
cores = 2,
refresh  = 50)
t <- seq(1, 120, by = 1)
x_pred <- new_x(testdata_002_new, t, x = "time", x_ns = "diseaseAge")
p <- pred(fit, x_pred, reduce = mean)
plot_f(fit, x = x_pred, pred = p, t_name = "time")
plot_pred(fit, x = x_pred, pred = p, t_name = "time")
dat <- testdata_002
dat$moi <- dat$id
dat
str(dat)
a <- lgp(y ~ age|id + age, dat, iter=100, chains=1)
plot_components(a)
plot_components(a, color_by = "id")
plot_components(a, color_by = "moi")
plot_components(a, color_by = c("moi", NA, NA))
a <- simulate_data(N = 10,
t_data = seq(12, 96, by = 6),
covariates = c(0,0,1,1))
source('C:/Users/Juho/Work/Research/LGPR/lgpr-private/advanced/test.R')
a
a@data
head(a@data)
citation()
?install.packages
setwd("C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create")
source('C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create/S_comparisons.R')
source('C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create/S_comparisons.R')
source('C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create/S_comparisons.R')
devtools::install_git
devtools::install_github('jtimonen/lgpr')
devtools::install_github('jtimonen/lgpr', ref = "v0")
install.packages("openxlsx")
install.packages("openxlsx")
devtools::install_github('jtimonen/lgpr', ref = "v0")
install.packages("rlang")
install.packages("rlang")
devtools::install_github('jtimonen/lgpr', ref = "v0")
library(lgpr)
source('C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create/S_comparisons.R')
source('C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create/S_comparisons.R')
source('C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create/S_comparisons.R')
Prob1
source('C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create/S_comparisons.R')
p1
p2
source('C:/Users/Juho/Work/Research/LGPR/lgpr-usage/misc/figures/2019/create/S_comparisons.R')
full <- ggarrange(p1, p2, nrow = 1, ncol = 2, labels = "auto")
full
