data <- simData$data
plot_simdata(simData, componentwise = F)
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
?lgpr
library(lgpr)
?lgpr
require(lgpr)
set.seed(543)
simData <- simulate_data(N            = 12,
t_data       = seq(12, 72, by = 12),
covariates   = c(    2,2),
relevances   = c(1,1, 0,1),
lengthscales = c(18,24, 18,18),
names        = c("sex", "location"),
t_jitter     = 1,
snr          = 5)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# create and fit a model --------------------------------------------------
fit <- lgp(formula = y ~ id + age + sex + location,
data    = data,
iter    = 1000,
chains  = 1,
cat_kernel_type = "binary")
# create and fit a model --------------------------------------------------
fit <- lgp(formula = y ~ id + age + sex + location,
data    = data,
iter    = 1000,
chains  = 1,
cat_interaction_kernel_type = "binary")
# create and fit a model --------------------------------------------------
fit <- lgp(formula = y ~ id + age + sex + location,
data    = data,
iter    = 1000,
chains  = 1,
cat_interact_kernel_type = "binary")
# visualization -----------------------------------------------------------
plot_components(fit)
plot_components(fit, corrected = FALSE)
plot_components(fit, corrected = FALSE, sample_idx = 1)
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
plot_posterior_f(fit, PRED, n_sds = 2, componentwise = TRUE)
plot_posterior_y(fit, PRED, n_sds = 2)
plot_posterior_f(fit, PRED, n_sds = 2)
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
plot_posterior_f(fit, PRED, n_sds = 2, componentwise = TRUE)
?kernel_smoothing
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line()
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line()
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line()
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line()
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
f1
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line()
library(ggplot2)
t1 <- seq(12, 72, by = 6)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.1*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(18*t2)
t <- c(t1,t2)
f <- c(f1,f2)
sex <- rep(c("M", "F"), each=n/2)
df <- data.frame(t,f,sex)
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line()
library(ggplot2)
t1 <- seq(12, 72, by = 6)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.07*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(18*t2)
t <- c(t1,t2)
f <- c(f1,f2)
sex <- rep(c("M", "F"), each=n/2)
df <- data.frame(t,f,sex)
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line()
library(ggplot2)
t1 <- seq(12, 72, by = 6)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.07*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(24*t2)
t <- c(t1,t2)
f <- c(f1,f2)
sex <- rep(c("M", "F"), each=n/2)
df <- data.frame(t,f,sex)
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line()
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line() + geom_point()
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line(lty=2) + geom_point()
library(ggplot2)
t1 <- seq(12, 72, by = 12)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.07*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(24*t2)
t <- c(t1,t2)
f <- c(f1,f2)
sex <- rep(c("M", "F"), each=n/2)
df <- data.frame(t,f,sex)
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line(lty=2) + geom_point()
library(ggplot2)
t1 <- seq(12, 72, by = 12)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.03*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(24*t2)
t <- c(t1,t2)
f <- c(f1,f2)
sex <- rep(c("M", "F"), each=n/2)
df <- data.frame(t,f,sex)
ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line(lty=2) + geom_point()
p <- ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line(lty=2) + geom_point() +
theme_minimal()
p
p <- ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line(lty=2) + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6)
p
p <- ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line(lty=2) + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^j))
p
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
p <- ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line(lty=2) + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^{(j)}(age)))
p
p <- ggplot(df, aes(x=t,y=f,group = sex, color = sex)) + geom_line(lty=2) + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^{(j)}(age, sex)))
p
?kernel_smoothing
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
p
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
p
LTY
DF
DF
df
p <- ggplot(df, aes(x=t,y=f,group = legend, color = legend)) + geom_line(lty=LTY) + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^{(j)}(age, sex)))
p
library(ggplot2)
library(lgpr)
t1 <- seq(12, 72, by = 12)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.03*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(24*t2)
t <- c(t1,t2)
f <- c(f1,f2)
legend <- rep(c("M", "F"), each=n/2)
ell1 <- 12
ell2 <- 1
tsm  <- seq(0,80,length.out = 100)
fsm1 <- lgpr:::kernel_smoothing(f, t, tsm, ell = ell1)
fsm2 <- lgpr:::kernel_smoothing(f, t, tsm, ell = ell2)
t <- c(t, tsm, tsm)
f <- c(f, fsm1, fsm2)
legend <- c(legend, rep("ell = 12", 100), rep("ell = 1", 100))
LTY <- c(rep(2, n), rep(1, 200))
df <- data.frame(t,f,legend, LTY)
p <- ggplot(df, aes(x=t,y=f,group = legend, color = legend, lty=LTY) + geom_line() + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^{(j)}(age, sex)))
p
p <- ggplot(df, aes(x=t,y=f,group = legend, color = legend, lty=LTY)) + geom_line() + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^{(j)}(age, sex)))
p
library(ggplot2)
library(lgpr)
t1 <- seq(12, 72, by = 12)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.03*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(24*t2)
t <- c(t1,t2)
f <- c(f1,f2)
legend <- rep(c("M", "F"), each=n/2)
ell1 <- 12
ell2 <- 1
tsm  <- seq(0,80,length.out = 100)
fsm1 <- lgpr:::kernel_smoothing(f, t, tsm, ell = ell1)
fsm2 <- lgpr:::kernel_smoothing(f, t, tsm, ell = ell2)
t <- c(t, tsm, tsm)
f <- c(f, fsm1, fsm2)
legend <- c(legend, rep("ell = 12", 100), rep("ell = 1", 100))
LTY <- c(rep("2", n), rep("1", 200))
df <- data.frame(t,f,legend, LTY)
p <- ggplot(df, aes(x=t,y=f,group = legend, color = legend, lty=LTY)) + geom_line() + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^{(j)}(age, sex)))
p
library(ggplot2)
library(lgpr)
t1 <- seq(12, 72, by = 12)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.03*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(24*t2)
t <- c(t1,t2)
f <- c(f1,f2)
legend <- rep(c("M", "F"), each=n/2)
ell1 <- 12
ell2 <- 4
tsm  <- seq(0,80,length.out = 100)
fsm1 <- lgpr:::kernel_smoothing(f, t, tsm, ell = ell1)
fsm2 <- lgpr:::kernel_smoothing(f, t, tsm, ell = ell2)
t <- c(t, tsm, tsm)
f <- c(f, fsm1, fsm2)
legend <- c(legend, rep("ell = 12", 100), rep("ell = 4", 100))
LTY <- c(rep("2", n), rep("1", 200))
df <- data.frame(t,f,legend, LTY)
p <- ggplot(df, aes(x=t,y=f,group = legend, color = legend, lty=LTY)) + geom_line() + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^{(j)}(age, sex)))
p
library(ggplot2)
library(lgpr)
t1 <- seq(12, 72, by = 12)
t2 <- t1 + 3
n  <- length(t1)*2
f1 <- 0.03*t1 + sin(24*t1)
f2 <- 0.05*t2 + sin(24*t2)
t <- c(t1,t2)
f <- c(f1,f2)
legend <- rep(c("M", "F"), each=n/2)
ell1 <- 24
ell2 <- 3
tsm  <- seq(0,80,length.out = 100)
fsm1 <- lgpr:::kernel_smoothing(f, t, tsm, ell = ell1)
fsm2 <- lgpr:::kernel_smoothing(f, t, tsm, ell = ell2)
t <- c(t, tsm, tsm)
f <- c(f, fsm1, fsm2)
legend <- c(legend, rep("ell = 24", 100), rep("ell = 3", 100))
LTY <- c(rep("2", n), rep("1", 200))
df <- data.frame(t,f,legend, LTY)
p <- ggplot(df, aes(x=t,y=f,group = legend, color = legend, lty=LTY)) + geom_line() + geom_point() +
theme_minimal() + scale_color_brewer(type = "qual", palette = 6) + xlab("age") +
ylab(expression(f^{(j)}(age, sex)))
p
source('~/CSB/Research/lgpr/lgpr-demos/misc/correction_demo.R')
p
shiny::runApp('CSB/Research/lgpr/lgpr-demos/viewer')
runApp('CSB/Research/lgpr/lgpr-demos/viewer')
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
Sys.getenv("R_LIBS_USER")
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
install.packages("digest")
install.packages("dplyr"
)
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
install.packages("processx")
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
library(devtools)
install_github("velocyto-team/velocyto.R")
library(rstan)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("devtools")
devtools::install_github('jtimonen/lgpr')
library(ggplot2)
library(ggpubr)
install.packages(repr)
install.packages("repr")
install.packages("IRkernel")
install.packages("installr")
library(installr)
uninstall.R('3.6.1')
uninstall.R('3.5.1')
uninstall.R('3.4.4')
install.packages("codetools")
install.packages("MASS")
install.packages('lme4')
install.packages('lmerTest')
install.packages('nlme')
install.packages(lattice)
install.packages('lattice')
sleepstudy
library(lme4)
sleepstudy
data('sleepstudy')
?data
data('sleepstudy', package = 'lme4')
dat <-data('sleepstudy', package = 'lme4')
dat
sleepstufy
sleepstudy
install.packages('boor')
install.packages('boot')
install.packages("boot")
install.packages('Matrix')
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages('Matrix')
library(lgpr)
?plot_effect_times
set.seed(123)
relev           <- c(0,1,1,1,0,0)
effect_time_fun <- function(){rnorm(n = 1, mean = 36, sd = 4)}
obs_fun         <- function(t){min(t + stats::rexp(n = 1, rate = 0.05), 96 - 1e-5)}
simData <- simulate_data(N            = 12,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0,2,2,2),
relevances   = relev,
lengthscales = c(18,24, 1, 18,18,18),
t_effect_range = effect_time_fun,
t_observed   = obs_fun,
snr          = 1)
FONT_SIZE <- 16
options(repr.plot.width=14, repr.plot.height=5)
plot_simdata(simData, nrow = 2, ncol = 6) + theme(text=element_text(size=FONT_SIZE))
options(repr.plot.width=10, repr.plot.height=8)
plot_components_simdata(simData, font_size = FONT_SIZE)
data <- simData$data
library(ggplot2)
simData
p2 <- prior_default()
p2$effect_time <- list(type="gamma_before_backwards", shape = 1, rate = 0.05)
f2 <- lgp(formula    = y ~ id + age + diseaseAge + z1 + z2 + z3,
data     = data,
prior    = p2,
iter     = 2000,
chains   = 4,
uncertain_effect_time = TRUE,
parallel = TRUE,
verbose  = FALSE,
likelihood = "none",
skip_postproc = TRUE)
plot_effect_times(f2)
p2$t_effect
p2 <- prior_default()
p2$effect_time <- list(type="gamma_before_backwards", shape = 1, rate = 0.05)
f2 <- lgp(formula    = y ~ id + age + diseaseAge + z1 + z2 + z3,
data     = data,
prior    = p2,
iter     = 2000,
chains   = 4,
uncertain_effect_time = TRUE,
parallel = TRUE,
verbose  = TRUE,
likelihood = "none",
skip_postproc = TRUE)
plot_effect_times(f2)
p2 <- prior_default()
p3$t_effect <- list(type="normal_whole", mu = 36, sigma = 4)
f2 <- lgp(formula    = y ~ id + age + diseaseAge + z1 + z2 + z3,
data     = data,
prior    = p2,
iter     = 2000,
chains   = 4,
uncertain_effect_time = TRUE,
parallel = TRUE,
verbose  = TRUE,
likelihood = "none",
skip_postproc = TRUE)
plot_effect_times(f2)
p2 <- prior_default()
p2$t_effect <- list(type="normal_whole", mu = 36, sigma = 4)
f2 <- lgp(formula    = y ~ id + age + diseaseAge + z1 + z2 + z3,
data     = data,
prior    = p2,
iter     = 2000,
chains   = 4,
uncertain_effect_time = TRUE,
parallel = TRUE,
verbose  = TRUE,
likelihood = "none",
skip_postproc = TRUE)
plot_effect_times(f2)
plot_effect_times(f2)
f2
plot_effect_times(f2)
plot(f2)
f2
plot_samples(f2)
set.seed(123)
relev           <- c(0,1,1,1,0,0)
effect_time_fun <- function(){rnorm(n = 1, mean = 36, sd = 4)}
obs_fun         <- function(t){min(t + stats::rexp(n = 1, rate = 0.05), 96 - 1e-5)}
simData <- simulate_data(N            = 12,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0,2,2,2),
relevances   = relev,
lengthscales = c(18,24, 1, 18,18,18),
t_effect_range = effect_time_fun,
t_observed   = obs_fun,
snr          = 1)
library(lgpr)
set.seed(123)
relev           <- c(0,1,1,1,0,0)
effect_time_fun <- function(){rnorm(n = 1, mean = 36, sd = 4)}
obs_fun         <- function(t){min(t + stats::rexp(n = 1, rate = 0.05), 96 - 1e-5)}
simData <- simulate_data(N            = 12,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0,2,2,2),
relevances   = relev,
lengthscales = c(18,24, 1, 18,18,18),
t_effect_range = effect_time_fun,
t_observed   = obs_fun,
snr          = 1)
data <- simData$data
p2 <- prior_default()
p2$t_effect <- list(type="gamma_before_backwards", shape = 1, rate = 0.05)
f2_prior <- lgp(formula    = y ~ id + age + diseaseAge + z1 + z2 + z3,
data     = data,
prior    = p2,
iter     = 2000,
chains   = 4,
uncertain_effect_time = TRUE,
parallel = TRUE,
verbose  = FALSE,
likelihood = "none",
skip_postproc = TRUE)
plot_effect_times(f2_prior)
p2 <- prior_default()
p2$t_effect <- list(type="normal_whole", mu = 36, sigma = 4)
f2_prior <- lgp(formula    = y ~ id + age + diseaseAge + z1 + z2 + z3,
data     = data,
prior    = p2,
iter     = 2000,
chains   = 4,
uncertain_effect_time = TRUE,
parallel = TRUE,
verbose  = FALSE,
likelihood = "none",
skip_postproc = TRUE)
plot_effect_times(f2_prior)
devtools::install_github('jtimonen/lgpr')
install.packages("rlnag")
install.packages("rlang")
install.packages("rlang")
devtools::install_github('jtimonen/lgpr')
install.packages("digest")
install.packages("digest")
devtools::install_github('jtimonen/lgpr')
setwd("~/CSB/Research/lgpr/lgpr-fix")
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
res
setwd("~/CSB/Research/lgpr/lgpr-fix")
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
pv1
fit1
pv1
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
pv1
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
pv1
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
pv1
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
pv1
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
pv1
ranef(fit1)
library(lmerTest)
ranef(fit1)
source('~/CSB/Research/lgpr/lgpr-fix/fix.R')
pv1
setwd("~/CSB/Research/lgpr/lgpr-usage/figures/create")
require(pROC)
require(ggplot2)
require(ggpubr)
require(lgpr)
source('helper/roc.R')
source('helper/barplot.R')
# Get results
res1_100 <- readRDS('data/main2/roc/roc_lme4/roc_100.rds')
res1_300 <- readRDS('data/main2/roc/roc_lme4/roc_300.rds')
res1_600 <- readRDS('data/main2/roc/roc_lme4/roc_600.rds')
res2 <- readRDS('data/main2/roc/roc_nb/results_nb.rds')
res3 <- readRDS('data/main2/roc/roc_et/results_et.rds')
res4 <- readRDS('data/main2/roc/roc_heter/results_het.rds')
# CREATE ALL ROC
PAL <- 6
p1a <- roc_lme4(res1_100, PAL)
p1b <- roc_lme4(res1_300, PAL)
p1c <- roc_lme4(res1_600, PAL)
p1  <- ggarrange(p1a, p1b, p1c,
labels = c("N=100","N=300","N=600"),
nrow = 1, ncol = 3)
p1
p2 <- roc_nb(res2, PAL)
L3 <- roc_et(res3, PAL)
p3a <- L3$a
p3b <- L3$b
L0  <- roc_heter_one(res4$rel[[1]], 0, PAL)
L2  <- roc_heter_one(res4$rel[[2]], 1, PAL)
L4  <- roc_heter_one(res4$rel[[3]], 1, PAL)
L6  <- roc_heter_one(res4$rel[[4]], 1, PAL)
L8  <- roc_heter_one(res4$rel[[5]], 1, PAL)
p4  <- ggarrange(L0$roc, L2$roc, L4$roc, L6$roc, L8$roc,
L0$beta, L2$beta, L4$beta, L6$beta, L8$beta,
nrow = 2, ncol = 5)
row1 <- ggarrange(p1b, p2, p3b, L4$roc, L4$beta,
nrow = 1, ncol = 5, labels = "auto")
row1
