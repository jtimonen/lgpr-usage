id  <- rep(1:Q, each = P)
sex <- rep(c(rep(1, Q/4*P), rep(0, Q/4*P)), 2)
onsets <- c(30,33.3,36.6,40)
da1 <- -onsets[1] + t
da2 <- -onsets[2] + t
da3 <- -onsets[3] + t
da4 <- -onsets[4] + t
disAge        <- c(da1,da2,da3,da4, rep(NaN, 4*P))
bloodPressure <- lgpr:::drawContinuous(Q, P, 1, c(0,0,0), c(1,1,1))$C
df            <- data.frame(cbind(id,age,disAge,bloodPressure,sex))
colnames(df)  <- c("id","age","disAge","bloodPressure","sex")
X_aff <- !is.nan(disAge)
# draw components from GP prior and scale
FF <- lgpr:::create_F(df,
covariates   = c(0,1,2),
relevances   = c(1,1,1,1,1),
lengthscales = c(12,24,1,1,12),
X_aff        = X_aff,
dis_fun      = "gp_vm",
steepness    = 0.5,
vm_params    = c(0.025, 1),
useBinKernel  = FALSE)
dad1
## Modeling a heterogeneous disease effect
# generate data -----------------------------------------------------------
set.seed(23432)
simData <- simulate_data(N            = 12,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 0,1),
lengthscales = c(18,24, 1, 18,18),
onset_range  = c(40,60),
snr          = 5,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
## Modeling a heterogeneous disease effect
require(lgpr)
# generate data -----------------------------------------------------------
set.seed(23432)
simData <- simulate_data(N            = 12,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 0,1),
lengthscales = c(18,24, 1, 18,18),
onset_range  = c(40,60),
snr          = 5,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
set.seed(234321)
simData <- simulate_data(N            = 12,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 0,1),
lengthscales = c(18,24, 1, 18,18),
onset_range  = c(36,60),
snr          = 5,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
set.seed(234321)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 72, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(18,24, 1, 18,18,18),
onset_range  = c(36,48),
snr          = 5,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
set.seed(234321)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 72, by = 1),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(18,24, 1, 18,18,18),
onset_range  = c(36,48),
snr          = 5,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
# generate data -----------------------------------------------------------
set.seed(234321)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 72, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(18,24, 1, 18,18,18),
onset_range  = c(36,48),
snr          = 5,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# create and fit a model with heterogeneous disease effect ----------------
fit <- lgp(formula      = y ~ id + age + diseaseAge + z1 + z2,
data         = data,
equal_effect = FALSE,
iter         = 1000,
chains       = 1)
# visualization -----------------------------------------------------------
plot_beta(fit)
plot_components(fit)
# predictions -------------------------------------------------------------
t_test <- seq(0, 100, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
plot_beta(fit)
# generate data -----------------------------------------------------------
set.seed(243)
simData <- simulate_data(N            = 14,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(18,24, 1, 18,18,18),
onset_range  = c(48,60),
snr          = 3,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# create and fit a model with heterogeneous disease effect ----------------
fit <- lgp(formula      = y ~ id + age + diseaseAge + z1 + z2 + z3,
data         = data,
equal_effect = FALSE,
iter         = 1000,
chains       = 1)
# visualization --------------------------
plot_beta(fit)
fit
# predictions -------------------------------------------------------------
t_test <- seq(0, 100, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
set.seed(2413)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 72, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(12,24, 1, 12,12),
onset_range  = c(48,48),
snr          = 5,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
set.seed(2413)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 72, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(12,24, 1, 12,12,12),
onset_range  = c(48,48),
snr          = 5,
N_affected   = 2,
t_jitter     = 1)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
set.seed(2413)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 72, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(12,24, 1, 12,12,12),
onset_range  = c(48,48),
snr          = 5,
N_affected   = 2,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
set.seed(2413)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 72, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(12,24, 1, 12,12,12),
onset_range  = c(36,48),
snr          = 5,
N_affected   = 2,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# create and fit a model with heterogeneous disease effect ----------------
fit <- lgp(formula      = y ~ id + age + diseaseAge + z1 + z2 + z3,
data         = data,
equal_effect = FALSE,
iter         = 1000,
chains       = 1)
# visualization -----------------------------------------------------------
plot_beta(fit)
plot_components(fit)
# predictions -------------------------------------------------------------
t_test <- seq(0, 100, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
plot_beta(fit)
set.seed(424)
simData <- simulate_data(N            = 12,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(18,24, 1, 18,18,18),
onset_range  = c(48,60),
snr          = 5,
N_affected   = 2,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# create and fit a model with heterogeneous disease effect ----------------
fit <- lgp(formula      = y ~ id + age + diseaseAge + z1 + z2 + z3,
data         = data,
equal_effect = FALSE,
iter         = 1000,
chains       = 1)
plot_beta(fit)
plot_components(fit)
plot_samples(fit)
t_test <- seq(0, 100, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
plot_samples(fit)
plot_inputwarp(fit)
source('/m/home/home5/56/timonej3/unix/csb/research/lgpr/lgpr-demos/mock_experiments/03_heter.R')
t_test <- seq(0, 100, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
plot_components(fit)
plot_components(beta)
plot_beta(fit)
prior_default()
plot_simdata(simData, componentwise = T)
16*8
set.seed(42141)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(18,24, 2, 18,18),
onset_range  = c(48,60),
snr          = 5,
N_affected   = 4,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# generate data -----------------------------------------------------------
set.seed(42141)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 1,0,0),
lengthscales = c(18,24, 2, 18,18),
onset_range  = c(48,60),
snr          = 5,
N_affected   = 4,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
set.seed(42141)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 1,0),
lengthscales = c(18,24, 2, 18,18),
onset_range  = c(48,60),
snr          = 5,
N_affected   = 4,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
set.seed(42141)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 1,0),
lengthscales = c(18,24, 2, 18,18),
onset_range  = c(56,60),
snr          = 5,
N_affected   = 4,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
## Modeling a heterogeneous disease effect
require(lgpr)
# generate data -----------------------------------------------------------
set.seed(42141)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 96, by = 12),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 1,0),
lengthscales = c(18,24, 2, 18,18),
onset_range  = c(58,60),
snr          = 5,
N_affected   = 4,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# create and fit a model with heterogeneous disease effect ----------------
fit <- lgp(formula      = y ~ id + age + diseaseAge + z1 + z2 + z3,
data         = data,
equal_effect = FALSE,
iter         = 1000,
chains       = 1)
# create and fit a model with heterogeneous disease effect ----------------
fit <- lgp(formula      = y ~ id + age + diseaseAge + z1 + z2,
data         = data,
equal_effect = FALSE,
iter         = 1000,
chains       = 1)
# visualization -----------------------------------------------------------
plot_beta(fit)
plot_components(fit)
# predictions -------------------------------------------------------------
t_test <- seq(0, 100, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
plot_components(fit)
plot_components(fit, sample_idx = 1)
plot_components(fit, sample_idx = 2)
plot_components(fit, sample_idx = 3)
plot_components(fit, sample_idx = 4)
plot_components(fit, sample_idx = 5)
plot_components(fit, sample_idx = 6)
plot_components(fit, sample_idx = 7)
plot_components(fit, sample_idx = 8)
8*7
# generate data -----------------------------------------------------------
set.seed(42141)
simData <- simulate_data(N            = 16,
t_data       = seq(8, 56, by = 8),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 1,0),
lengthscales = c(12,24, 1, 12,12),
onset_range  = c(30,32),
snr          = 5,
N_affected   = 4,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# create and fit a model with heterogeneous disease effect ----------------
fit <- lgp(formula      = y ~ id + age + diseaseAge + z1 + z2,
data         = data,
equal_effect = FALSE,
iter         = 1000,
chains       = 1)
# visualization -----------------------------------------------------------
plot_beta(fit)
plot_components(fit)
# predictions -------------------------------------------------------------
t_test <- seq(0, 100, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
t_test <- seq(0, 60, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
set.seed(241)
simData <- simulate_data(N            = 16,
t_data       = seq(12, 72, by = 12),
covariates   = c(    0, 2,2),
relevances   = c(1,1,1, 1,0),
lengthscales = c(18,24, 1, 18,18),
onset_range  = c(46,48),
snr          = 5,
N_affected   = 4,
t_jitter     = 0)
data <- simData$data
plot_simdata(simData, componentwise = T)
plot_simdata(simData, componentwise = F)
# create and fit a model with heterogeneous disease effect ----------------
fit <- lgp(formula      = y ~ id + age + diseaseAge + z1 + z2,
data         = data,
equal_effect = FALSE,
iter         = 1000,
chains       = 1)
plot_beta(fit)
plot_components(fit)
# predictions -------------------------------------------------------------
t_test <- seq(0, 60, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
ls
plot_beta(fit)
t_test <- seq(0, 80, length.out=120)
X_test <- create_test_points(fit, t_test)
PRED   <- lgp_predict(fit, X_test, samples = "mean")
plot_posterior_f(fit, PRED, componentwise = T)
idx <- mod(23, 100)
idx <- 100 % 3
floor(343/100)
floor(43/100)
ceiling(43/100)
ceiling(143/100)
ceiling(100/100)
ceiling(210/100)
ceiling(400/100)
simulate_data()
?simulate_data()
dir
ls()
dir()
?dir
dir(pattern = "cs")
source('/m/home/home5/56/timonej3/unix/csb/research/lgpr/lgpr-demos/mock_experiments/00_basic_disease.R')
lgpr
t_test
X_test
PRED
fit
?correct
?component
?kernel_smoothing
?dexp
source('/m/home/home5/56/timonej3/unix/csb/research/lgpr/lgpr-demos/figures/sim/04_create_prior_images.R')
par(mfrow = c(2,2))
plot(xx, p1)
plot(xx, p2)
plot(xx, p1, 'l', main = "onset sampled from")
plot(xx, p2, 'l', main = "detection delay sampled from")
xx <- seq(0, 96, by=1)
p1 <- dnorm(xx, mean = 36, sd = 4)
p2 <- dexp(xx, rate = 0.05)
par(mfrow = c(2,1))
plot(xx, p1, 'l', main = "Real onset sampled from N(36, 4^2)")
plot(xx, p2, 'l', main = "Detection delay sampled from Exp(0.05)")
xx <- seq(0, 96, by=0.25)
p1 <- dnorm(xx, mean = 36, sd = 4)
p2 <- dexp(xx, rate = 0.05)
par(mfrow = c(2,1))
plot(xx, p1, 'l', main = "Real onset sampled from N(36, 4^2)")
plot(xx, p2, 'l', main = "Detection delay sampled from Exp(0.05)")
library(velocyto.R)
# CHROMAFFIN DATA ---------------------------------------------------------
# Download the preprocessed data which contains annotated
# spliced, unspliced and spanning read count matrices
ldat <- readRDS(url("http://pklab.med.harvard.edu/velocyto/chromaffin/ldat.rds"))
ldat <- lapply(ldat, function(x) {
colnames(x) <-  gsub("_unique.bam", "", gsub(".*:","",colnames(x)))
return(x)
})
ldat
ldat$spliced
S <- as.matrix(ldat$spliced)
S
ls
ldat
S
dim(S)
image(S)
max(S)
min(S)
unique(S)
?lgp
?lgp_stan
library(rstan)
library(lgpr)
?`lgpmodel-class`
library("rcpp")
library("Rcpp")
Rcpp.package.skeleton("mypackage")
library(mypackage)
rcpp_hello_world()
hello_world()
library(lgpr)
library('devtools')
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
library(lgpr)
devtools::install_github('jtimonen/lgpr', build_vignettes = TRUE)
?lgpr
library(lgpr)
?lgpr
?lmerTest
library(lmerTest)
?lmerTest
?drop1
?lmerTest
citation()
setwd("/m/home/home5/56/timonej3/unix/csb/research/lgpr/lgpr-usage/demos")
